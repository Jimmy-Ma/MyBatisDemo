<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 加载属性文件 -->
	<!-- <properties resource="db.properties"></properties> -->
	
	<settings>
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启二级缓存（默认就是true） -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	
	<!-- 自定义别名 -->
	<typeAliases>
		<!-- 
			单个别名定义
			type：类的全限定名
			alias：别名 
		 -->
		<typeAlias type="com.jimmy.mybatis.po.User" alias="user"/>
		
		<!-- 
			批量别名定义
			指定包名，MyBatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大写或小写都可以）
		 -->
		 <package name="com.jimmy.mybatis.po"/>
	</typeAliases>
	<!-- 和spring整合后 environments配置将废除 -->
	<!-- <environments default="development">
		<environment id="development">
			使用jdbc事务管理，由MyBatis控制事务
			<transactionManager type="JDBC" />
			数据库连接池，由MyBatis管理
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments> -->
	
	<!-- 加载映射文件 -->
	<mappers>
		<!-- <mapper resource="sqlmap/User.xml"/>
		通过resource一次加载一个映射文件
		<mapper resource="mapper/UserMapper.xml"/> -->
		<!-- 
			批量加载mapper
			指定mapper接口的包名，MyBatis自动扫描包内的所有mapper接口进行加载
			遵循一些规范：
				使用mapper代理方式开发dao
				mapper接口类名和mapper.xml映射文件名保持一致，且在同一个目录中
				
		 -->
		<!-- <package name="com.jimmy.mybatis.mapper"/> -->
	</mappers>
	
</configuration>